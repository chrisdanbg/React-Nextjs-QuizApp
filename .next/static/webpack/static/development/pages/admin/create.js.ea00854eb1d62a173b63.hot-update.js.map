{"version":3,"file":"static/webpack/static\\development\\pages\\admin\\create.js.ea00854eb1d62a173b63.hot-update.js","sources":["webpack:///./pages/admin/create.js"],"sourcesContent":["import Auth from \"../../components/auth\";\r\nimport {Form, Container,Button} from 'react-bootstrap';\r\n\r\nimport firebase from '../../components/firebase';\r\nimport { useState } from \"react\";\r\n\r\n\r\nfunction Create() {\r\n    \r\n    const [question, setQuestion]  = useState({\r\n        title: '',\r\n        correctAnswer: '',\r\n        otherAnswer1: '',\r\n        otherAnswer2: '',\r\n        otherAnswer3: ''\r\n    })\r\n\r\n    const [isSubmited, setSubmited] = useState(false)\r\n    const [error, setError] = useState('');\r\n\r\n    const handleChange = e =>\r\n    setQuestion({ ...question, [e.target.name]: e.target.value });\r\n\r\n    const handleSubmit = (e) => {\r\n        if (!handleValidation()) \r\n        {\r\n            return;\r\n        }\r\n        firebase.firestore().collection('questions').doc('dsa').set(question);\r\n        setSubmited(true);\r\n    }\r\n\r\n    const handleValidation = () => {\r\n        if(!question[\"title\"] || !question[\"correctAnswer\"] || !question[\"otherAnswer1\"] || !question[\"otherAnswer2\"] || !question[\"otherAnswer3\"]){\r\n            formIsValid = false;\r\n            setError(\"All fields must be filled before submiting the question\")\r\n            return false;\r\n        }\r\n\r\n        setError('');\r\n        return true;\r\n    }\r\n\r\n    const renderNewQuestionForm = () => {\r\n        return(\r\n            <div>\r\n            <h1>Create Question Page</h1>\r\n            <Form>\r\n                <Form.Control name=\"title\" onChange={handleChange} className=\"my-2\" placeholder=\"Question title\" required/>\r\n                <Form.Control name=\"correctAnswer\" onChange={handleChange} className=\"my-2\" placeholder=\"Correct answer\" required/>\r\n                <Form.Control name=\"otherAnswer1\" onChange={handleChange} className=\"my-2\" placeholder=\"Other answer 1\" required/>\r\n                <Form.Control name=\"otherAnswer2\" onChange={handleChange} className=\"my-2\" placeholder=\"Other answer 2\" required/>\r\n                <Form.Control name=\"otherAnswer3\" onChange={handleChange} className=\"my-2\" placeholder=\"Other answer 3\" required/>\r\n                <span style={{color: \"red\"}}>{error}</span>\r\n            </Form>\r\n            <Button onClick={handleSubmit} className=\"my-2\">Submit</Button> <br />\r\n        </div>\r\n        )\r\n    }\r\n    \r\n    const renderSubmitedConfirm = () => {\r\n        return(\r\n            <h1>SUBMITED</h1>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Auth>\r\n            <Container>\r\n                {!isSubmited ? renderNewQuestionForm() : renderSubmitedConfirm()}\r\n            </Container>\r\n        </Auth>\r\n    )\r\n}\r\n\r\nexport default Create"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAYA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}