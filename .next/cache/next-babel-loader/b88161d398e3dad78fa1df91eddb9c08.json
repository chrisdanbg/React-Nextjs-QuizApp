{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\applynx2\\\\Desktop\\\\react-app\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport quizQuestions from '../api/quizQuestions';\nimport Question from \"../components/question\";\nimport { Component } from \"react\";\nimport Quiz from '../components/quiz';\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      result: ''\n    };\n  }\n\n  componentDidMount() {\n    const shuffledAnswerOptions = quizQuestions.map(question => this.shuffleArray(question.answers));\n    this.setState({\n      question: quizQuestions[0].question,\n      answerOptions: shuffledAnswerOptions[0]\n    });\n  }\n\n  shuffleArray(array) {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"App-Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"React Quiz\")), __jsx(Quiz, {\n      answer: this.state.answer,\n      answerOptions: this.state.answerOptions,\n      questionId: this.state.questionId,\n      question: this.state.question,\n      questionTotal: quizQuestions.length,\n      onAnswerSelected: this.handleAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/applynx2/Desktop/react-app/pages/index.js"],"names":["quizQuestions","Question","Component","Quiz","Index","constructor","props","state","counter","questionId","question","answerOptions","answer","answersCount","result","componentDidMount","shuffledAnswerOptions","map","shuffleArray","answers","setState","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","render","handleAnswerSelected"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,sBAA1B;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,CADA;AAETC,MAAAA,UAAU,EAAE,CAFH;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,aAAa,EAAE,EAJN;AAKTC,MAAAA,MAAM,EAAE,EALC;AAMTC,MAAAA,YAAY,EAAE,EANL;AAOTC,MAAAA,MAAM,EAAE;AAPC,KAAb;AASH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,qBAAqB,GAAGhB,aAAa,CAACiB,GAAd,CAAmBP,QAAD,IAAc,KAAKQ,YAAL,CAAkBR,QAAQ,CAACS,OAA3B,CAAhC,CAA9B;AAEA,SAAKC,QAAL,CAAc;AACVV,MAAAA,QAAQ,EAAEV,aAAa,CAAC,CAAD,CAAb,CAAiBU,QADjB;AAEVC,MAAAA,aAAa,EAAEK,qBAAqB,CAAC,CAAD;AAF1B,KAAd;AAIH;;AAEDE,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,QAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,QAAiCC,cAAjC;AAAA,QAAiDC,WAAjD,CADgB,CAGhB;;AACA,WAAO,MAAMH,YAAb,EAA2B;AAEvB;AACAG,MAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,MAAAA,YAAY,IAAI,CAAhB,CAJuB,CAMvB;;AACAE,MAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,MAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,MAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACH;;AAED,WAAOH,KAAP;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACN,WACK;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAII,MAAC,IAAD;AACI,MAAA,MAAM,EAAE,KAAKtB,KAAL,CAAWK,MADvB;AAEI,MAAA,aAAa,EAAE,KAAKL,KAAL,CAAWI,aAF9B;AAGI,MAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWE,UAH3B;AAII,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAJzB;AAKI,MAAA,aAAa,EAAEV,aAAa,CAACuB,MALjC;AAMI,MAAA,gBAAgB,EAAE,KAAKO,oBAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADL;AAeF;;AA3DyB;;AA8D9B,eAAe1B,KAAf","sourcesContent":["import quizQuestions from '../api/quizQuestions'\r\n\r\nimport Question from \"../components/question\";\r\nimport { Component } from \"react\";\r\nimport Quiz from '../components/quiz';\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            counter: 0,\r\n            questionId: 1,\r\n            question: '',\r\n            answerOptions: [],\r\n            answer: '',\r\n            answersCount: {},\r\n            result: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const shuffledAnswerOptions = quizQuestions.map((question) => this.shuffleArray(question.answers));\r\n        \r\n        this.setState({\r\n            question: quizQuestions[0].question,\r\n            answerOptions: shuffledAnswerOptions[0]\r\n        })\r\n    }\r\n\r\n    shuffleArray(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            // And swap it with the current element.\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n\r\n        return array;\r\n    };\r\n\r\n    render() {\r\n       return( \r\n            <div className=\"App\">\r\n                <div className=\"App-Header\">\r\n                    <h2>React Quiz</h2>\r\n                </div>\r\n                <Quiz\r\n                    answer={this.state.answer}\r\n                    answerOptions={this.state.answerOptions} \r\n                    questionId={this.state.questionId}\r\n                    question={this.state.question}\r\n                    questionTotal={quizQuestions.length}\r\n                    onAnswerSelected={this.handleAnswerSelected}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}