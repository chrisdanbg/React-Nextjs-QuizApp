{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kristiyan\\\\Desktop\\\\React-Nextjs-QuizApp\\\\components\\\\auth.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from '../components/firebase';\nimport fb from 'firebase';\nimport { Component } from 'react';\nimport Link from 'next/link'; // Configure FirebaseUI.\n\nvar uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: '/signedIn',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [fb.auth.EmailAuthProvider.PROVIDER_ID],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: function signInSuccessWithAuthResult() {\n      return false;\n    }\n  }\n};\n\nvar Auth = /*#__PURE__*/function (_Component) {\n  _inherits(Auth, _Component);\n\n  function Auth(props) {\n    var _this;\n\n    _classCallCheck(this, Auth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Auth).call(this, props));\n    _this.state = {\n      isSignedIn: false // Local signed-in state.\n\n    };\n    return _this;\n  } // Listen to the Firebase Auth state and set the local state.\n\n\n  _createClass(Auth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(function (user) {\n        if (user && user.email === \"chrisdanbg@infantjoy.bg\") {\n          _this2.setState({\n            isSignedIn: true\n          });\n        } else {\n          _this2.setState({\n            isSignedIn: false\n          });\n        }\n      });\n    } // Make sure we un-register Firebase observers when the component unmounts.\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unregisterAuthObserver();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isSignedIn) {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"My App\"), __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Please sign-in:\"), __jsx(StyledFirebaseAuth, {\n          uiConfig: uiConfig,\n          firebaseAuth: firebase.auth(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }));\n      }\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"My App\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Welcome \", firebase.auth().currentUser.email, \"! You are now signed-in!\"), __jsx(Link, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Home\")), this.props.children, __jsx(\"a\", {\n        onClick: function onClick() {\n          return firebase.auth().signOut();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Sign-out\"));\n    }\n  }]);\n\n  return Auth;\n}(Component);\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/Kristiyan/Desktop/React-Nextjs-QuizApp/components/auth.js"],"names":["StyledFirebaseAuth","firebase","fb","Component","Link","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","Auth","props","state","isSignedIn","unregisterAuthObserver","onAuthStateChanged","user","email","setState","currentUser","children","signOut"],"mappings":";;;;;;;;AAAA,OAAOA,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,EAAP,MAAe,UAAf;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,IAAMC,QAAQ,GAAG;AACb;AACAC,EAAAA,UAAU,EAAE,OAFC;AAGb;AACAC,EAAAA,gBAAgB,EAAE,WAJL;AAKb;AACAC,EAAAA,aAAa,EAAE,CACbN,EAAE,CAACO,IAAH,CAAQC,iBAAR,CAA0BC,WADb,CANF;AASbC,EAAAA,SAAS,EAAE;AACT;AACAC,IAAAA,2BAA2B,EAAE;AAAA,aAAM,KAAN;AAAA;AAFpB;AATE,CAAjB;;IAeMC,I;;;AAEJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAc;AACZC,MAAAA,UAAU,EAAE,KADA,CACM;;AADN,KAAd;AAFiB;AAKlB,G,CAEC;;;;;wCACkB;AAAA;;AAClB,WAAKC,sBAAL,GAA8BjB,QAAQ,CAACQ,IAAT,GAAgBU,kBAAhB,CAC5B,UAACC,IAAD,EAAU;AACR,YAAIA,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAe,yBAA3B,EAAsD;AACpD,UAAA,MAAI,CAACC,QAAL,CAAc;AAACL,YAAAA,UAAU,EAAE;AAAb,WAAd;AACD,SAFD,MAEO;AACL,UAAA,MAAI,CAACK,QAAL,CAAc;AAACL,YAAAA,UAAU,EAAE;AAAb,WAAd;AACD;AACF,OAP2B,CAA9B;AASD,K,CAEC;;;;2CACqB;AACrB,WAAKC,sBAAL;AACD;;;6BAEQ;AACP,UAAI,CAAC,KAAKF,KAAL,CAAWC,UAAhB,EAA4B;AAC1B,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,EAGE,MAAC,kBAAD;AAAoB,UAAA,QAAQ,EAAEZ,QAA9B;AAAyC,UAAA,YAAY,EAAEJ,QAAQ,CAACQ,IAAT,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CADF;AAOD;;AACD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAYR,QAAQ,CAACQ,IAAT,GAAgBc,WAAhB,CAA4BF,KAAxC,6BAFF,EAGE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAHF,EAMG,KAAKN,KAAL,CAAWS,QANd,EAOE;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAMvB,QAAQ,CAACQ,IAAT,GAAgBgB,OAAhB,EAAN;AAAA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,CADF;AAWD;;;;EAhDgBtB,S;;AAmDnB,eAAeW,IAAf","sourcesContent":["import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from '../components/firebase';\r\nimport fb from 'firebase'\r\nimport { Component } from 'react';\r\nimport Link from 'next/link';\r\n\r\n// Configure FirebaseUI.\r\nconst uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: 'popup',\r\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n    signInSuccessUrl: '/signedIn',\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [\r\n      fb.auth.EmailAuthProvider.PROVIDER_ID\r\n    ],\r\n    callbacks: {\r\n      // Avoid redirects after sign-in.\r\n      signInSuccessWithAuthResult: () => false\r\n    }\r\n  };\r\n\r\nclass Auth extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state =  {\r\n      isSignedIn: false // Local signed-in state.\r\n    };\r\n  }\r\n\r\n    // Listen to the Firebase Auth state and set the local state.\r\n  componentDidMount() {\r\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n      (user) => {\r\n        if (user && user.email === \"chrisdanbg@infantjoy.bg\") {\r\n          this.setState({isSignedIn: true})\r\n        } else {\r\n          this.setState({isSignedIn: false})\r\n        }\r\n      }\r\n    );\r\n  }\r\n    \r\n    // Make sure we un-register Firebase observers when the component unmounts.\r\n  componentWillUnmount() {\r\n    this.unregisterAuthObserver();\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isSignedIn) {\r\n      return (\r\n        <div>\r\n          <h1>My App</h1>\r\n          <p>Please sign-in:</p>\r\n          <StyledFirebaseAuth uiConfig={uiConfig}  firebaseAuth={firebase.auth()}/>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>My App</h1>\r\n        <p>Welcome {firebase.auth().currentUser.email}! You are now signed-in!</p>\r\n        <Link href=\"/\">\r\n          <a>Home</a>\r\n        </Link>\r\n        {this.props.children}\r\n        <a onClick={() => firebase.auth().signOut()}>Sign-out</a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth"]},"metadata":{},"sourceType":"module"}