{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kristiyan\\\\Desktop\\\\React-Nextjs-QuizApp\\\\components\\\\login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from '../components/firebase';\nimport fb from 'firebase';\nimport { Component } from 'react'; // Configure FirebaseUI.\n\nvar uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: '/signedIn',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [fb.auth.EmailAuthProvider.PROVIDER_ID],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: function signInSuccessWithAuthResult() {\n      return false;\n    }\n  }\n};\n\nvar Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      user: false // Local signed-in state.\n\n    };\n    return _this;\n  } // Listen to the Firebase Auth state and set the local state.\n\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this2.setState({\n            user: user\n          });\n        } else {\n          _this2.setState({\n            user: null\n          });\n        }\n      });\n    } // Make sure we un-register Firebase observers when the component unmounts.\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unregisterAuthObserver();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, __jsx(StyledFirebaseAuth, {\n        uiConfig: uiConfig,\n        firebaseAuth: firebase.auth(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Kristiyan/Desktop/React-Nextjs-QuizApp/components/login.js"],"names":["StyledFirebaseAuth","firebase","fb","Component","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","Login","props","state","user","unregisterAuthObserver","onAuthStateChanged","setState"],"mappings":";;;;;;;;AAAA,OAAOA,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,EAAP,MAAe,UAAf;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CAEA;;AACA,IAAMC,QAAQ,GAAG;AACb;AACAC,EAAAA,UAAU,EAAE,OAFC;AAGb;AACAC,EAAAA,gBAAgB,EAAE,WAJL;AAKb;AACAC,EAAAA,aAAa,EAAE,CACbL,EAAE,CAACM,IAAH,CAAQC,iBAAR,CAA0BC,WADb,CANF;AASbC,EAAAA,SAAS,EAAE;AACT;AACAC,IAAAA,2BAA2B,EAAE;AAAA,aAAM,KAAN;AAAA;AAFpB;AATE,CAAjB;;IAeMC,K;;;AAEJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAc;AACZC,MAAAA,IAAI,EAAE,KADM,CACA;;AADA,KAAd;AAFiB;AAKlB,G,CAEC;;;;;wCACkB;AAAA;;AAClB,WAAKC,sBAAL,GAA8BhB,QAAQ,CAACO,IAAT,GAAgBU,kBAAhB,CAAmC,UAACF,IAAD,EAAU;AACvE,YAAIA,IAAJ,EAAU;AACR,UAAA,MAAI,CAACG,QAAL,CAAc;AAACH,YAAAA,IAAI,EAAJA;AAAD,WAAd;AACD,SAFD,MAEO;AACL,UAAA,MAAI,CAACG,QAAL,CAAc;AAACH,YAAAA,IAAI,EAAG;AAAR,WAAd;AACD;AACF,OAN2B,CAA9B;AAQD,K,CAEC;;;;2CACqB;AACrB,WAAKC,sBAAL;AACD;;;6BAGQ;AACP,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAEb,QAA9B;AAAyC,QAAA,YAAY,EAAEH,QAAQ,CAACO,IAAT,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKD;;;;EAjCiBL,S;;AAoCpB,eAAeU,KAAf","sourcesContent":["import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from '../components/firebase';\r\nimport fb from 'firebase'\r\nimport { Component } from 'react';\r\n\r\n// Configure FirebaseUI.\r\nconst uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: 'popup',\r\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n    signInSuccessUrl: '/signedIn',\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [\r\n      fb.auth.EmailAuthProvider.PROVIDER_ID\r\n    ],\r\n    callbacks: {\r\n      // Avoid redirects after sign-in.\r\n      signInSuccessWithAuthResult: () => false\r\n    }\r\n  };\r\n\r\nclass Login extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state =  {\r\n      user: false // Local signed-in state.\r\n    };\r\n  }\r\n\r\n    // Listen to the Firebase Auth state and set the local state.\r\n  componentDidMount() {\r\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged((user) => {\r\n        if (user) {\r\n          this.setState({user})\r\n        } else {\r\n          this.setState({user : null})\r\n        } \r\n      }\r\n    );\r\n  }\r\n    \r\n    // Make sure we un-register Firebase observers when the component unmounts.\r\n  componentWillUnmount() {\r\n    this.unregisterAuthObserver();\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n        <div>\r\n            <StyledFirebaseAuth uiConfig={uiConfig}  firebaseAuth={firebase.auth()}/>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}