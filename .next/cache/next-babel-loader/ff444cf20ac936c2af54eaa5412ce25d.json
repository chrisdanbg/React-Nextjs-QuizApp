{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kristiyan\\\\Desktop\\\\React-Nextjs-QuizApp\\\\pages\\\\admin\\\\create.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Auth from \"../../components/auth\";\nimport { Form, Container, Button } from 'react-bootstrap';\nimport quizQuestions from '../../api/quizQuestions';\nimport firebase from '../../components/firebase';\nimport { useState } from \"react\";\n\nfunction Create() {\n  const {\n    0: question,\n    1: setQuestion\n  } = useState({\n    title: '',\n    correctAnswer: '',\n    otherAnswer1: '',\n    otherAnswer2: '',\n    otherAnswer3: ''\n  });\n\n  const handleChange = e => setQuestion(_objectSpread({}, question, {\n    [e.target.name]: e.target.value\n  }));\n\n  let questionSent = false;\n\n  const handleSubmit = () => {\n    firebase.firestore().collection('questions').doc('da').set(question);\n    questionSent = true;\n  };\n\n  const renderQuestion = () => {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Create Question Page\"), __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(Form.Control, {\n      name: \"title\",\n      onChange: handleChange,\n      className: \"my-2\",\n      placeholder: \"Question title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), __jsx(Form.Control, {\n      name: \"correctAnswer\",\n      onChange: handleChange,\n      className: \"my-2\",\n      placeholder: \"Correct answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), __jsx(Form.Control, {\n      name: \"otherAnswer1\",\n      onChange: handleChange,\n      className: \"my-2\",\n      placeholder: \"Other answer 1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), __jsx(Form.Control, {\n      name: \"otherAnswer2\",\n      onChange: handleChange,\n      className: \"my-2\",\n      placeholder: \"Other answer 2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), __jsx(Form.Control, {\n      name: \"otherAnswer3\",\n      onChange: handleChange,\n      className: \"my-2\",\n      placeholder: \"Other answer 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), __jsx(Button, {\n      onClick: handleSubmit,\n      className: \"my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Submit\"), \" \", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  };\n\n  const renderSumbited = () => {\n    return __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"SUBMITED\");\n  };\n\n  return __jsx(Auth, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, questionSent ? renderQuestion() : renderSumbited()));\n}\n\nexport default Create;","map":{"version":3,"sources":["C:/Users/Kristiyan/Desktop/React-Nextjs-QuizApp/pages/admin/create.js"],"names":["Auth","Form","Container","Button","quizQuestions","firebase","useState","Create","question","setQuestion","title","correctAnswer","otherAnswer1","otherAnswer2","otherAnswer3","handleChange","e","target","name","value","questionSent","handleSubmit","firestore","collection","doc","set","renderQuestion","renderSumbited"],"mappings":"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","sourcesContent":["import Auth from \"../../components/auth\";\r\nimport {Form, Container,Button} from 'react-bootstrap';\r\n\r\nimport quizQuestions from '../../api/quizQuestions'\r\nimport firebase from '../../components/firebase';\r\nimport { useState } from \"react\";\r\n\r\n\r\nfunction Create() {\r\n    \r\n    const [question, setQuestion]  = useState({\r\n        title: '',\r\n        correctAnswer: '',\r\n        otherAnswer1: '',\r\n        otherAnswer2: '',\r\n        otherAnswer3: ''\r\n    })\r\n    \r\n    const handleChange = e =>\r\n    setQuestion({ ...question, [e.target.name]: e.target.value });\r\n    \r\n    let questionSent = false;\r\n\r\n    const handleSubmit = () => {\r\n        firebase.firestore().collection('questions').doc('da').set(question);\r\n        questionSent = true;\r\n    }\r\n\r\n    const renderQuestion = () => {\r\n        return(\r\n            <div>\r\n            <h1>Create Question Page</h1>\r\n            <Form>\r\n                <Form.Control name=\"title\" onChange={handleChange} className=\"my-2\" placeholder=\"Question title\" />\r\n                <Form.Control name=\"correctAnswer\" onChange={handleChange} className=\"my-2\" placeholder=\"Correct answer\" />\r\n                <Form.Control name=\"otherAnswer1\" onChange={handleChange} className=\"my-2\" placeholder=\"Other answer 1\" />\r\n                <Form.Control name=\"otherAnswer2\" onChange={handleChange} className=\"my-2\" placeholder=\"Other answer 2\" />\r\n                <Form.Control name=\"otherAnswer3\" onChange={handleChange} className=\"my-2\" placeholder=\"Other answer 3\" />\r\n            </Form>\r\n            <Button onClick={handleSubmit} className=\"my-2\">Submit</Button> <br />\r\n        </div>\r\n        )\r\n    }\r\n    \r\n    const renderSumbited = () => {\r\n        return(\r\n            <h1>SUBMITED</h1>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Auth>\r\n            <Container>\r\n                {questionSent ? renderQuestion() : renderSumbited()}   \r\n            </Container>\r\n        </Auth>\r\n    )\r\n}\r\n\r\nexport default Create"]},"metadata":{},"sourceType":"module"}