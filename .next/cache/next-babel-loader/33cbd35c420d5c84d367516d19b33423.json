{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kristiyan\\\\Desktop\\\\React-Nextjs-QuizApp\\\\components\\\\login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport firebase from '../components/firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nfunction Login() {\n  var uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    signInSuccessUrl: '/signedIn',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID]\n  };\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Welcome to My Awesome App\"), __jsx(\"div\", {\n    id: \"firebaseui-auth-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    id: \"loader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Loading...\"), __jsx(StyledFirebaseAuth, {\n    uiConfig: uiConfig,\n    firebaseAuth: firebase.auth(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Kristiyan/Desktop/React-Nextjs-QuizApp/components/login.js"],"names":["firebase","StyledFirebaseAuth","Login","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,wBAArB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;;AAEA,SAASC,KAAT,GAAiB;AAEb,MAAMC,QAAQ,GAAG;AACb;AACAC,IAAAA,UAAU,EAAE,OAFC;AAGb;AACAC,IAAAA,gBAAgB,EAAE,WAJL;AAKb;AACAC,IAAAA,aAAa,EAAE,CACbN,QAAQ,CAACO,IAAT,CAAcC,kBAAd,CAAiCC,WADpB,EAEbT,QAAQ,CAACO,IAAT,CAAcG,oBAAd,CAAmCD,WAFtB;AANF,GAAjB;AAYA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAK,IAAA,EAAE,EAAC,2BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAII,MAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEN,QAA9B;AAAwC,IAAA,YAAY,EAAEH,QAAQ,CAACO,IAAT,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH;;AAED,eAAeL,KAAf","sourcesContent":["import firebase from '../components/firebase';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\n\r\nfunction Login() {\r\n\r\n    const uiConfig = {\r\n        // Popup signin flow rather than redirect flow.\r\n        signInFlow: 'popup',\r\n        // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n        signInSuccessUrl: '/signedIn',\r\n        // We will display Google and Facebook as auth providers.\r\n        signInOptions: [\r\n          firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n          firebase.auth.FacebookAuthProvider.PROVIDER_ID\r\n        ]\r\n      };\r\n\r\n    return(\r\n        <div>\r\n            <h1>Welcome to My Awesome App</h1>\r\n            <div id=\"firebaseui-auth-container\"></div>\r\n            <div id=\"loader\">Loading...</div>\r\n            <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}