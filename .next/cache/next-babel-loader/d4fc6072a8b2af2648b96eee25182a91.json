{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\applynx2\\\\Desktop\\\\react-app\\\\components\\\\quiz.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport QuestionCount from './questionCount';\nimport Question from './question';\nimport AnswerOption from './answerOption';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return __jsx(AnswerOption, {\n      key: key.content,\n      answerContent: key.content,\n      answerType: key.type,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    });\n  }\n\n  return __jsx(\"div\", {\n    className: \"quiz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(QuestionCount, {\n    counter: props.questionId,\n    total: props.questionTotal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), __jsx(Question, {\n    content: props.question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), __jsx(\"ul\", {\n    className: \"answerOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.answerOptions.map(renderAnswerOptions)));\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  counter: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default Quiz;","map":{"version":3,"sources":["C:/Users/applynx2/Desktop/react-app/components/quiz.js"],"names":["PropTypes","QuestionCount","Question","AnswerOption","Quiz","props","renderAnswerOptions","key","content","type","answer","questionId","onAnswerSelected","questionTotal","question","answerOptions","map","propTypes","string","isRequired","array","counter","number","func"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,WAASC,mBAAT,CAA6BC,GAA7B,EAAkC;AAC9B,WACI,MAAC,YAAD;AACI,MAAA,GAAG,EAAEA,GAAG,CAACC,OADb;AAEI,MAAA,aAAa,EAAED,GAAG,CAACC,OAFvB;AAGI,MAAA,UAAU,EAAED,GAAG,CAACE,IAHpB;AAII,MAAA,MAAM,EAAEJ,KAAK,CAACK,MAJlB;AAKI,MAAA,UAAU,EAAEL,KAAK,CAACM,UALtB;AAMI,MAAA,gBAAgB,EAAEN,KAAK,CAACO,gBAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH;;AAGD,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AACI,IAAA,OAAO,EAAEP,KAAK,CAACM,UADnB;AAEI,IAAA,KAAK,EAAEN,KAAK,CAACQ,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,MAAC,QAAD;AAAU,IAAA,OAAO,EAAER,KAAK,CAACS,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAACU,aAAN,CAAoBC,GAApB,CAAwBV,mBAAxB,CADL,CANJ,CADJ;AAYH;;AAEDF,IAAI,CAACa,SAAL,GAAiB;AACbP,EAAAA,MAAM,EAAEV,SAAS,CAACkB,MAAV,CAAiBC,UADZ;AAEbJ,EAAAA,aAAa,EAAEf,SAAS,CAACoB,KAAV,CAAgBD,UAFlB;AAGbE,EAAAA,OAAO,EAAErB,SAAS,CAACsB,MAAV,CAAiBH,UAHb;AAIbL,EAAAA,QAAQ,EAAEd,SAAS,CAACkB,MAAV,CAAiBC,UAJd;AAKbR,EAAAA,UAAU,EAAEX,SAAS,CAACsB,MAAV,CAAiBH,UALhB;AAMbN,EAAAA,aAAa,EAAEb,SAAS,CAACsB,MAAV,CAAiBH,UANnB;AAObP,EAAAA,gBAAgB,EAAEZ,SAAS,CAACuB,IAAV,CAAeJ;AAPpB,CAAjB;AAUA,eAAef,IAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport QuestionCount from './questionCount';\r\nimport Question from './question';\r\nimport AnswerOption from './answerOption';\r\n\r\nfunction Quiz(props) {\r\n    function renderAnswerOptions(key) {\r\n        return(\r\n            <AnswerOption\r\n                key={key.content}\r\n                answerContent={key.content}\r\n                answerType={key.type}\r\n                answer={props.answer}\r\n                questionId={props.questionId}\r\n                onAnswerSelected={props.onAnswerSelected}\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"quiz\">\r\n            <QuestionCount\r\n                counter={props.questionId}\r\n                total={props.questionTotal}\r\n            />\r\n            <Question content={props.question}/>\r\n            <ul className=\"answerOptions\">\r\n                {props.answerOptions.map(renderAnswerOptions)}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nQuiz.propTypes = {\r\n    answer: PropTypes.string.isRequired,\r\n    answerOptions: PropTypes.array.isRequired,\r\n    counter: PropTypes.number.isRequired,\r\n    question: PropTypes.string.isRequired,\r\n    questionId: PropTypes.number.isRequired,\r\n    questionTotal: PropTypes.number.isRequired,\r\n    onAnswerSelected: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}