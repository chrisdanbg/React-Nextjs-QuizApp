{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kristiyan\\\\Desktop\\\\React-Nextjs-QuizApp\\\\components\\\\login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from '../components/firebase';\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: '/signedIn',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [{\n    provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    requireDisplayName: false\n  }]\n};\n\nfunction Login() {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Welcome to My Awesome App\"), __jsx(\"div\", {\n    id: \"firebaseui-auth-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    id: \"loader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Loading...\"), __jsx(StyledFirebaseAuth, {\n    uiConfig: uiConfig,\n    firebaseAuth: firebase.auth(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Kristiyan/Desktop/React-Nextjs-QuizApp/components/login.js"],"names":["StyledFirebaseAuth","firebase","uiConfig","signInFlow","signInSuccessUrl","signInOptions","provider","auth","EmailAuthProvider","PROVIDER_ID","requireDisplayName","Login"],"mappings":";;;AAAA,OAAOA,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,MAAMC,QAAQ,GAAG;AACb;AACAC,EAAAA,UAAU,EAAE,OAFC;AAGb;AACAC,EAAAA,gBAAgB,EAAE,WAJL;AAKb;AACAC,EAAAA,aAAa,EAAE,CACX;AAACC,IAAAA,QAAQ,EAAEL,QAAQ,CAACM,IAAT,CAAcC,iBAAd,CAAgCC,WAA3C;AAAyDC,IAAAA,kBAAkB,EAAE;AAA7E,GADW;AANF,CAAjB;;AAYA,SAASC,KAAT,GAAiB;AACb,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAK,IAAA,EAAE,EAAC,2BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAII,MAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAET,QAA9B;AAAwC,IAAA,YAAY,EAAED,QAAQ,CAACM,IAAT,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH;;AAED,eAAeI,KAAf","sourcesContent":["import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from '../components/firebase';\r\n\r\nconst uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: 'popup',\r\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n    signInSuccessUrl: '/signedIn',\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [\r\n        {provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,  requireDisplayName: false}\r\n      ],\r\n  };\r\n\r\n\r\nfunction Login() {\r\n    return(\r\n        <div>\r\n            <h1>Welcome to My Awesome App</h1>\r\n            <div id=\"firebaseui-auth-container\"></div>\r\n            <div id=\"loader\">Loading...</div>\r\n            <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}